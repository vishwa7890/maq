"""add_documents_table

Revision ID: c4627fcd9959
Revises: eb4c3129a20c
Create Date: 2025-07-20 21:18:51.550149

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c4627fcd9959'
down_revision: Union[str, Sequence[str], None] = 'eb4c3129a20c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create documents table
    op.create_table('documents',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('session_id', sa.Integer(), nullable=True),
        sa.Column('filename', sa.String(length=255), nullable=False),
        sa.Column('filepath', sa.String(length=512), nullable=False),
        sa.Column('filetype', sa.String(length=50), nullable=False),
        sa.Column('filesize', sa.Integer(), nullable=False),
        sa.Column('uploaded_at', sa.DateTime(), nullable=True),
        sa.Column('processed', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    
    # Handle null session_ids by creating a default session if needed
    op.execute("""
        DO $$
        BEGIN
            -- Only proceed if chat_sessions is empty
            IF NOT EXISTS (SELECT 1 FROM chat_sessions LIMIT 1) THEN
                -- Get first user's quai_id if users exist
                DECLARE first_quai_id TEXT;
                BEGIN
                    SELECT quai_id INTO first_quai_id FROM users LIMIT 1;
                    
                    IF first_quai_id IS NOT NULL THEN
                        -- Create session with valid user/quai_id
                        INSERT INTO chat_sessions 
                        (user_id, quai_id, title, is_archived, created_at, updated_at)
                        VALUES (
                            (SELECT id FROM users LIMIT 1),
                            first_quai_id,
                            'Default Session', 
                            false, 
                            NOW(), 
                            NOW()
                        );
                    ELSE
                        -- No users exist, create minimal session (may violate constraints)
                        INSERT INTO chat_sessions 
                        (user_id, quai_id, title, is_archived, created_at, updated_at)
                        VALUES (1, 'temp', 'Default Session', false, NOW(), NOW());
                    END IF;
                END;
            END IF;
            
            -- Assign all orphaned messages to first session
            UPDATE chat_messages 
            SET session_id = (SELECT id FROM chat_sessions ORDER BY id LIMIT 1)
            WHERE session_id IS NULL;
        END
        $$;
    """)
    
    # Now safely set NOT NULL constraint
    op.alter_column('chat_messages', 'session_id', nullable=False)
    op.alter_column('chat_sessions', 'is_archived',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('chat_sessions', 'is_archived',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('chat_messages', 'session_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
